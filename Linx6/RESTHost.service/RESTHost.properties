{
  "Id": "nK2W",
  "Name": "RESTHost",
  "ServiceData": {
    "Properties": [
      {
        "Id": "Authenticate",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "Max request size",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": 30,
        "ValueType": "Int32"
      },
      {
        "Id": "After operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": false
      },
      {
        "Id": "CORS origins",
        "Type": "Compiled:System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Operation events",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.OperationEventCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "OperationEvents_Authenticate",
            "Parameters": [],
            "ReturnTypeName": "AuthenticateEventOutput",
            "ReturnType": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventOutput, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ]
      },
      {
        "Id": "Show server errors",
        "Type": "Compiled:Boolean",
        "ValueUsage": "RuntimeRead",
        "Value": false
      },
      {
        "Id": "Base URI",
        "Type": "Compiled:String",
        "ValueUsage": "RuntimeRead",
        "Value": {
          "Expression": "(!$.Settings.LinxIsLocalDevEnv  ?   $.Settings.LinxApiBaseUri.Replace(\"http:\", \"https:\") + \":8080\" :   $.Settings.LinxApiBaseUri + \":\" + $.Settings.LinxApiPort) + \"/RealWorld\"",
          "CompiledExpression": "=(!{3}?{2}.Replace(\"http:\",\"https:\")+\":8080\":{1}+\":\"+{0})+\"/RealWorld\"",
          "Type": "Compiled:String"
        },
        "ValueType": "Linx.CSharpExpression"
      },
      {
        "Id": "Max connections",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Before operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": false
      },
      {
        "Id": "API doc security scheme",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": ""
      },
      {
        "Id": "API documentation",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.ApiDocumentation.ApiDocumentationType, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": "SwaggerUI"
      },
      {
        "Id": "Auth config",
        "Type": "Compiled:System.Collections.Generic.List`1[[Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.AspNetCore.Authentication.AuthenticationConfiguration, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "API definition",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": "openapi: 3.0.1\ninfo:\n  title: RealWorld API\n  description: Linx medium API\n  contact:\n    name: RealWorld\n    \n  license:\n    name: MIT License\n    url: 'https://opensource.org/licenses/MIT'\n  version: 1.0.0\npaths:\n  /users/login:\n    post:\n      tags:\n        - User and Authentication\n      summary: Existing user login\n      description: Login for existing user\n      operationId: Login\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      \n      requestBody:\n        description: Credentials to use\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginUserRequest'\n        required: true\n  /user:\n    get:\n      tags:\n      - User and Authentication\n      summary: Get current user\n      description: Gets the currently logged-in user\n      security:\n        - Token: []\n      operationId: GetCurrentUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    put:\n      tags:\n        - User and Authentication\n      summary: Update current user password\n      description: Updated user information for current user\n      operationId: UpdateCurrentUser\n      requestBody:\n        description: User details to update. At least **one** field is required.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: body\n    \n  /users:\n    post:\n      tags:\n        - User and Authentication\n      summary: Register a new user\n      description: Register a new user\n      operationId: CreateUser\n      requestBody:\n        description: Details of the new user to register\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewUserRequest'\n        required: true\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      x-codegen-request-body-name: body\n  \n  /tags:\n    get:\n      summary: Get tags\n      description: Get tags. Auth not required\n      operationId: GetTags\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagsResponse'\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n  /articles/{slug}:\n    get:\n      tags:\n        - Articles\n      summary: Get an article\n      description: Get an article. Auth not required\n      operationId: GetArticle\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article to get\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'     \n    put:\n      tags:\n        - Articles\n      summary: Update an article\n      description: Update an article. Auth is required\n      operationId: UpdateArticle\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Article to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateArticleRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: article\n    delete:\n      tags:\n        - Articles\n      summary: Delete an article\n      description: Delete an article. Auth is required\n      operationId: DeleteArticle\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles/{slug}/favorite:\n    post:\n      tags:\n        - Favorites\n      summary: Favorite an article\n      description: Favorite an article. Auth is required\n      operationId: CreateArticleFavorite\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article that you want to favorite\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n    delete:\n      tags:\n        - Favorites\n      summary: Unfavorite an article\n      description: Unfavorite an article. Auth is required\n      operationId: DeleteArticleFavorite\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article that you want to unfavorite\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []       \n  /articles/{slug}/comments:\n    get:\n      tags:\n        - Comments\n      summary: Get comments for an article\n      description: Get the comments for an article. Auth is optional\n      operationId: GetArticleComments\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article that you want to get comments for\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleCommentsResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    post:\n      tags:\n        - Comments\n      summary: Create a comment for an article\n      description: Create a comment for an article. Auth is required\n      operationId: CreateArticleComment\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article that you want to create a comment for\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Comment you want to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewCommentRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleCommentResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: comment\n  /articles/{slug}/comments/{id}:\n    delete:\n      tags:\n        - Comments\n      summary: Delete a comment for an article\n      description: Delete a comment for an article. Auth is required\n      operationId: DeleteArticleComment\n      parameters:\n        - name: slug\n          in: path\n          description: Slug of the article that you want to delete a comment for\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: ID of the comment you want to delete\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content: {}\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /profiles/{username}:\n    get:\n      tags:\n        - Profile\n      summary: Get a profile\n      description: Get a profile of a user of the system. Auth is optional\n      operationId: GetProfileByUsername\n      parameters:\n        - name: username\n          in: path\n          description: Username of the profile to get\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n  /profiles/{username}/follow:\n    post:\n      tags:\n        - Profile\n      summary: Follow a user\n      description: Follow a user by username\n      operationId: FollowUserByUsername\n      parameters:\n        - name: username\n          in: path\n          description: Username of the profile you want to follow\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n    delete:\n      tags:\n        - Profile\n      summary: Unfollow a user\n      description: Unfollow a user by username\n      operationId: UnfollowUserByUsername\n      parameters:\n        - name: username\n          in: path\n          description: Username of the profile you want to unfollow\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles/feed:\n    get:\n      tags:\n        - Articles\n      summary: Get recent articles from users you follow\n      description: >-\n        Get most recent articles from users you follow. Use query parameters to\n        limit. Auth is required\n      operationId: GetArticlesFeed\n      parameters:\n        - name: limit\n          in: query\n          description: Limit number of articles returned (default is 20)\n          schema:\n            type: integer\n            default: 20\n        - name: offset\n          in: query\n          description: Offset/skip number of articles (default is 0)\n          schema:\n            type: integer\n            default: 0\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleArticlesResponse'\n        '401':\n          description: Unauthorized\n          content: {}\n        '422':\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles:\n    get:\n      tags:\n      - Articles\n      summary: Get recent articles globally\n      description: Get most recent articles globally. Use query parameters to filter\n        results. Auth is optional\n      operationId: GetArticles\n      parameters:\n        - name: tag\n          in: query\n          description: Filter by tag\n          schema:\n            type: string\n        - name: author\n          in: query\n          description: Filter by author (username)\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Limit number of articles returned (default is 20)\n          schema:\n            type: integer\n            default: 20\n        - name: offset\n          in: query\n          description: Offset/skip number of articles (default is 0)\n          schema:\n            type: integer\n            default: 0\n      \n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleArticlesResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    post:\n      tags:\n      - Articles\n      summary: Create an article\n      description: Create an article. Auth is required\n      operationId: CreateArticle\n      requestBody:\n        description: Article to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewArticleRequest'\n        required: true\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security: \n        - Token: []\n      x-codegen-request-body-name: article\n    \ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      name: Authorization\n      in: header\n  schemas:  \n    User:\n      required:\n        - bio\n        - email\n        - image\n        - token\n        - username\n      type: object\n      properties:\n        email:\n          type: string\n        token:\n          type: string\n        username:\n          type: string\n        bio:\n          type: string\n          nullable: true\n        image:\n          type: string\n          nullable: true\n    UserResponse:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n  \n    LoginUser:\n      required:\n        - email\n        - password\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n    LoginUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/LoginUser'\n         \n    NewUser:\n      required:\n        - email\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n    UpdateUser:\n      type: object\n      properties:\n        email:\n          type: string\n        username:\n          type: string\n        bio:\n          type: string\n        image:\n          type: string\n        password:\n          type: string\n    UpdateUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/UpdateUser'\n    NewUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/NewUser'\n          \n    Article:\n      required:\n        - author\n        - body\n        - createdAt\n        - description\n        - favorited\n        - favoritesCount\n        - slug\n        - tagList\n        - title\n        - updatedAt\n      type: object\n      properties:\n        slug:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n        tagList:\n          type: array\n          items:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        favorited:\n          type: boolean\n        favoritesCount:\n          type: integer\n        author:\n          $ref: '#/components/schemas/Profile'\n    MultipleArticlesResponse:\n      required:\n      - articles\n      - articlesCount\n      type: object\n      properties:\n        articles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Article'\n        articlesCount:\n          type: integer\n    SingleArticleResponse:\n      required:\n      - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/Article'\n    Comment:\n      required:\n        - author\n        - body\n        - createdAt\n        - id\n        - updatedAt\n      type: object\n      properties:\n        id:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        body:\n          type: string\n        author:\n          $ref: '#/components/schemas/Profile'\n    SingleCommentResponse:\n      required:\n        - comment\n      type: object\n      properties:\n        comment:\n          $ref: '#/components/schemas/Comment'\n    MultipleCommentsResponse:\n      required:\n        - comments\n      type: object\n      properties:\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n    NewComment:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          type: string\n    NewCommentRequest:\n      required:\n        - comment\n      type: object\n      properties:\n        comment:\n          $ref: '#/components/schemas/NewComment'      \n    \n    NewArticle:\n      required:\n        - body\n        - description\n        - title\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n        tagList:\n          type: array\n          items:\n            type: string\n    NewArticleRequest:\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/NewArticle'\n    UpdateArticle:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n    UpdateArticleRequest:\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/UpdateArticle'\n    ProfileResponse:\n      required:\n        - profile\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/Profile'\n    Profile:\n      required:\n        - bio\n        - following\n        - image\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        bio:\n          type: string\n          nullable: true\n        image:\n          type: string\n          nullable: true\n        following:\n          type: boolean\n    TagsResponse:\n      required:\n        - tags\n      type: object\n      properties:\n        tags:\n          type: array\n          items:\n            type: string\n    GenericErrorModel:\n      required:\n        - errors\n      type: object\n      properties:\n        errors:\n          required:\n            - body\n          type: object\n          properties:\n            body:\n              type: array\n              items:\n                type: string          \n"
      },
      {
        "Id": "Operations",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "Login",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "DrKo",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:DrKo"
          },
          {
            "Name": "GetCurrentUser",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "WyFz",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:WyFz"
          },
          {
            "Name": "UpdateCurrentUser",
            "HttpMethod": "PUT",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "Eghw",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:Eghw"
          },
          {
            "Name": "CreateUser",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "aHTF",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:aHTF"
          },
          {
            "Name": "GetTags",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "mxds",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:mxds"
          },
          {
            "Name": "GetArticle",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "gtL3",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:gtL3"
          },
          {
            "Name": "UpdateArticle",
            "HttpMethod": "PUT",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "rr9d",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:rr9d"
          },
          {
            "Name": "DeleteArticle",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "Dgn7",
            "ResponseContentType": null,
            "ReturnType": "Generated:Dgn7"
          },
          {
            "Name": "CreateArticleFavorite",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "9bh5",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:9bh5"
          },
          {
            "Name": "DeleteArticleFavorite",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "GitY",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:GitY"
          },
          {
            "Name": "GetArticleComments",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "M6Dc",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:M6Dc"
          },
          {
            "Name": "CreateArticleComment",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "R5kx",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:R5kx"
          },
          {
            "Name": "DeleteArticleComment",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "Db4m",
            "ResponseContentType": null,
            "ReturnType": "Generated:Db4m"
          },
          {
            "Name": "GetProfileByUsername",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "JJhe",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:JJhe"
          },
          {
            "Name": "FollowUserByUsername",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "RPyt",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:RPyt"
          },
          {
            "Name": "UnfollowUserByUsername",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "COWv",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:COWv"
          },
          {
            "Name": "GetArticlesFeed",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "P0tk",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:P0tk"
          },
          {
            "Name": "GetArticles",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "ukGp",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:ukGp"
          },
          {
            "Name": "CreateArticle",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "UEd0",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:UEd0"
          }
        ]
      }
    ],
    "Events": [
      {
        "Id": "CreateArticle",
        "Name": "CreateArticle",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:fTxR"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:UEd0"
      },
      {
        "Id": "CreateArticleComment",
        "Name": "CreateArticleComment",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:vyuB"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:R5kx"
      },
      {
        "Id": "CreateArticleFavorite",
        "Name": "CreateArticleFavorite",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:9bh5"
      },
      {
        "Id": "CreateUser",
        "Name": "CreateUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:XqIf"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:aHTF"
      },
      {
        "Id": "DeleteArticle",
        "Name": "DeleteArticle",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Dgn7"
      },
      {
        "Id": "DeleteArticleComment",
        "Name": "DeleteArticleComment",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "id",
            "TypeReference": "Compiled:Int32"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Db4m"
      },
      {
        "Id": "DeleteArticleFavorite",
        "Name": "DeleteArticleFavorite",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:GitY"
      },
      {
        "Id": "FollowUserByUsername",
        "Name": "FollowUserByUsername",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:RPyt"
      },
      {
        "Id": "GetArticle",
        "Name": "GetArticle",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:gtL3"
      },
      {
        "Id": "GetArticleComments",
        "Name": "GetArticleComments",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:M6Dc"
      },
      {
        "Id": "GetArticles",
        "Name": "GetArticles",
        "Parameters": [
          {
            "Name": "tag",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "author",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "limit",
            "TypeReference": "Compiled:Int32"
          },
          {
            "Name": "offset",
            "TypeReference": "Compiled:Int32"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:ukGp"
      },
      {
        "Id": "GetArticlesFeed",
        "Name": "GetArticlesFeed",
        "Parameters": [
          {
            "Name": "limit",
            "TypeReference": "Compiled:Int32"
          },
          {
            "Name": "offset",
            "TypeReference": "Compiled:Int32"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:P0tk"
      },
      {
        "Id": "GetCurrentUser",
        "Name": "GetCurrentUser",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:WyFz"
      },
      {
        "Id": "GetProfileByUsername",
        "Name": "GetProfileByUsername",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:JJhe"
      },
      {
        "Id": "GetTags",
        "Name": "GetTags",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:mxds"
      },
      {
        "Id": "Login",
        "Name": "Login",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:jefm"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:DrKo"
      },
      {
        "Id": "OperationEvents_Authenticate",
        "Name": "OperationEvents_Authenticate",
        "Parameters": [
          {
            "Name": "AuthenticationData",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventInputData, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventOutput, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "UnfollowUserByUsername",
        "Name": "UnfollowUserByUsername",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:COWv"
      },
      {
        "Id": "UpdateArticle",
        "Name": "UpdateArticle",
        "Parameters": [
          {
            "Name": "slug",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:zK61"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:rr9d"
      },
      {
        "Id": "UpdateCurrentUser",
        "Name": "UpdateCurrentUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:Bmn0"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.2.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Eghw"
      }
    ]
  },
  "ServiceType": "REST:RESTHost",
  "Events": [
    "FollowUserByUsername.event",
    "UpdateArticle.event",
    "DeleteArticleComment.event",
    "Login.event",
    "GetCurrentUser.event",
    "GetTags.event",
    "CreateArticleComment.event",
    "DeleteArticle.event",
    "GetProfileByUsername.event",
    "CreateArticleFavorite.event",
    "DeleteArticleFavorite.event",
    "GetArticleComments.event",
    "UnfollowUserByUsername.event",
    "GetArticles.event",
    "GetArticlesFeed.event",
    "UpdateCurrentUser.event",
    "GetArticle.event",
    "CreateArticle.event",
    "CreateUser.event",
    "OperationEvents_Authenticate.event"
  ]
}